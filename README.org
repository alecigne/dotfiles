#+TITLE: Dotfiles

My dotfiles (see definition below), managed using the [[https://www.gnu.org/software/stow/][GNU Stow]] symlink
farm manager.

This repo is used in conjunction with my [[https://github.com/alecigne/ansible-desktop][Ansible-based Debian
configuration]] to document/automate the setup/configuration of my
personal workstations.

* Table of contents                                            :toc_1:noexport:
- [[#dotfiles][Dotfiles?]]
- [[#branching-strategy][Branching strategy]]
- [[#about-gnu-stow][About GNU Stow]]
- [[#packages][Packages]]

* Dotfiles?

The idea of dotfiles is explained [[https://wiki.archlinux.org/index.php/Dotfiles][here]].

#+begin_quote
User-specific application configuration is traditionally stored in so
called dotfiles (files whose filename starts with a dot). It is common
practice to track dotfiles with a version control system such as Git
to keep track of changes and synchronize dotfiles across various
hosts.
#+end_quote

* Branching strategy

Every environment I use has its own variation of dotfiles. The
=master= branch is my "main" config (personal
workstations). Variations, such as dotfiles adapted to [[https://termux.com/][Termux]], are
kept in separate branches.

* About GNU Stow

I use GNU Stow to manage symbolic links to my dotfiles. You can read a
short GNU Stow tutorial in my [[https://lecigne.net/notes/stow.html][public notes]] (also available [[https://github.com/alecigne/lecigne.net/blob/master/notes/stow.org][on Github]]
as a "source" Org file).

The =stow.bash= script automatically stows the packages in the home
directory.

* Packages

** cmus

[[https://cmus.github.io][cmus]] is a small, fast and powerful console music player for Unix-like
operating systems.

** Common Lisp

My Common Lisp (SBCL) configuration.

*** ASDF

[[https://common-lisp.net/project/asdf/][Another System Definition Facility]], a build system for Common Lisp.

This includes the configuration for ASDF's ~source-registry~. More
info [[https://common-lisp.net/project/asdf/asdf/Configuring-ASDF-to-find-your-systems.html][here]].

*** SBCL

[[http://www.sbcl.org/][SBCL]], a high performance Common Lisp compiler.

** cVim

[[https://chrome.google.com/webstore/detail/cvim/ihlenndgcmojhcghmfjfneahoeklbjjh][cVim]], an extension adding Vim-like bindings to Google Chrome.

Just load this once in Chrome:

#+begin_example
  set localconfig
  let configpath = '/path/to/.cvimrc'
#+end_example

** Emacs

[[https://github.com/alecigne/.emacs.d][SwanEmacs]], my Org-based Emacs configuration, included as a submodule.

** Fonts

Originally included as submodules, but now managed as simple ~.otf~
files.

*** FontAwesome

See [[https://github.com/FortAwesome/Font-Awesome][FontAwesome]] on Github.

*** Fira

See [[https://github.com/bBoxType/FiraSans][this repo]] and [[https://bboxtype.com/typefaces/FiraSans/][this page]]. This font is used in Firefox OS;
however...

#+begin_quote
After Mozilla withdrew from the project, we integrated small bug
fixes and several requests for the 4.3 release.
#+end_quote

*** Source Code Pro

See [[https://github.com/adobe-fonts/source-code-pro][Source Code Pro]] on Github.

** Git

My [[https://git-scm.com/][Git]] configuration. Aliases include a selection of ~git~ aliases
from the [[https://github.com/GitAlias/gitalias][gitalias]] repository, organized with ~org-babel~ for more
readability. Please go to the original source for reference.

About the ~.gitalias.org~ file:

- Every section has a Noweb reference.

- Everything is then fed to a main code block through Noweb (see
  the bottom of the raw Org file).

- The result after ~org-babel-tangle~ is a ~.gitalias~ file.

** GnuPG

My [[https://www.gnupg.org/][GnuPG]] config files.

** Gradle

[[https://gradle.org/][Gradle]] settings.

** i3

My config for the [[https://i3wm.org/][i3]] window manager, including my [[https://i3wm.org/i3status/manpage.html][i3status]]
configuration.

** Ledger

My [[https://www.ledger-cli.org/][Ledger]] configuration.

** Maven

Settings for [[https://maven.apache.org/][Apache Maven]].

** Pass

My passwords, managed with [[https://www.passwordstore.org/][pass]], the standard unix password
manager. This is a private submodule pointing to a repository hosted
on my Raspberry Pi. Although passwords are safely encrypted with
GnuPG, I prefer not to make these files public.

** Polybar

[[https://github.com/polybar/polybar][Polybar]], a fast and easy-to-use status bar. Not used at the moment.

** Rclone

My [[https://github.com/rclone/rclone][rclone]] configuration file (encrypted).

** Rofi

[[https://github.com/davatorium/rofi][Rofi]], a window switcher, application launcher and dmenu replacement.

** StumpWM

My [[https://github.com/alecigne/.stumpwm.d][StumpWM config]], included as a submodule.

** urxvt

[[https://wiki.archlinux.org/index.php/rxvt-unicode][urxvt]], a lightweight terminal emulator.

** VSCode

My [[https://code.visualstudio.com/][VSCode]] config. I keep ~$HOME/.config/Code/User/settings.json~ under
version control and a list of extensions. A script will install them
automatically; I can get them through ~code --list-extensions~.

** Wallpapers

Good resources:

- https://wallhaven.cc/
- https://unsplash.com/

** Xmodmap

My Xmodmap config.

** Zsh

A great [[http://www.zsh.org/][shell]].
